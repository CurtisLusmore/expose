{"version":3,"sources":["CheckInForm.jsx","HistoryList.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","marginBottom","CheckInForm","addLocation","initialStateString","window","localStorage","getItem","initialState","JSON","parse","name","mode","React","useState","state","_setState","setState","newState","setItem","stringify","classes","className","onSubmit","ev","preventDefault","TextField","required","label","value","onChange","target","Button","variant","color","type","disabled","Error","dividerFullWidth","margin","spacing","CheckInEntry","timestamp","location","ListItem","ListItemText","primary","latitude","longitude","href","locationLink","secondary","Date","toLocaleTimeString","timeString","HistoryList","days","history","reduce","curr","prev","tail","date","toLocaleDateString","undefined","items","List","subheader","ListSubheader","component","map","Divider","Typography","display","App","getTime","navigator","geolocation","getCurrentPosition","coords","maximumAge","enableHighAccuracy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.247abb33.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > *': {\r\n      marginBottom: '10px',\r\n    },\r\n    '& .MuiTextField-root': {\r\n      width: '100%',\r\n    }\r\n  },\r\n}));\r\n\r\nexport default function CheckInForm({ addLocation }) {\r\n  const initialStateString = window.localStorage.getItem('form');\r\n  const initialState = initialStateString\r\n    ? JSON.parse(initialStateString)\r\n    : { name: '', mode: 'checkin' };\r\n\r\n  const [state, _setState] = React.useState(initialState);\r\n\r\n  function setState(newState) {\r\n    if (typeof(newState) === 'function') {\r\n      newState = newState(state);\r\n    }\r\n    window.localStorage.setItem('form', JSON.stringify(newState));\r\n    _setState(newState);\r\n  }\r\n\r\n  function changeName(ev) {\r\n    setState(state => ({ ...state, name: ev.target.value }));\r\n  }\r\n\r\n  function checkIn(ev) {\r\n    ev.preventDefault();\r\n    addLocation(state.name);\r\n    setState(state => ({ ...state, mode: 'checkout' }));\r\n    return false;\r\n  }\r\n\r\n  function checkOut(ev) {\r\n    ev.preventDefault();\r\n    addLocation(state.name);\r\n    setState(state => ({ ...state, name: '', mode: 'checkin' }));\r\n    return false;\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  switch (state.mode) {\r\n    case 'checkin':\r\n      return <form className={classes.root} onSubmit={checkIn}>\r\n        <TextField\r\n          required\r\n          label=\"Location Name\"\r\n          name=\"name\"\r\n          value={state.name}\r\n          onChange={changeName}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n        >\r\n          Check In\r\n        </Button>\r\n      </form>;\r\n    case 'checkout':\r\n      return <form className={classes.root} onSubmit={checkOut}>\r\n        <TextField\r\n          required\r\n          label=\"Location Name\"\r\n          name=\"name\"\r\n          value={state.name}\r\n          disabled={true}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n        >\r\n          Check Out\r\n        </Button>\r\n      </form>;\r\n    default:\r\n      throw new Error(`Unknown mode ${state.mode}`);\r\n  }\r\n};","import React from 'react';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  dividerFullWidth: {\r\n    margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n  },\r\n}));\r\n\r\nfunction CheckInEntry({ timestamp, name, location }) {\r\n  function timeString(timestamp) {\r\n    return new Date(timestamp).toLocaleTimeString();\r\n  }\r\n\r\n  function locationLink(name, { latitude, longitude }) {\r\n    return <a href={`https://www.google.com/maps/search/${latitude},${longitude}/@${latitude},${longitude},17z`}>{name}</a>;\r\n  }\r\n\r\n  return <ListItem key={timestamp}>\r\n    <ListItemText primary={locationLink(name, location)} secondary={timeString(timestamp)} />\r\n  </ListItem>\r\n};\r\n\r\nexport default function HistoryList({ history }) {\r\n  const days = history.reduce(([prev, ...tail], curr) => {\r\n    const date = new Date(curr.timestamp).toLocaleDateString();\r\n    return prev === undefined\r\n      ? [{ date, items: [curr] }]\r\n      : prev.date !== date\r\n      ? [{ date, items: [curr] }, prev, ...tail]\r\n      : [{ date, items: [curr, ...prev.items] }, ...tail];\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  function CheckInDay({ date, items }) {\r\n    return <span key={`span-${date}`}>\r\n      <Divider component=\"li\" key={`divider-${date}`} />\r\n      <li key={`subhead-${date}`}>\r\n        <Typography\r\n          className={classes.dividerFullWidth}\r\n          color=\"textSecondary\"\r\n          display=\"block\"\r\n          variant=\"caption\"\r\n        >\r\n          {date}\r\n        </Typography>\r\n      </li>\r\n      {items.map(CheckInEntry)}\r\n    </span>;\r\n  };\r\n\r\n  return <List\r\n      className={classes.root}\r\n      subheader={\r\n        <ListSubheader component=\"div\">\r\n          Location History\r\n        </ListSubheader>\r\n      }\r\n    >\r\n    {days.map(CheckInDay)}\r\n  </List>;\r\n};","import React from 'react';\nimport CheckInForm from './CheckInForm';\nimport HistoryList from './HistoryList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n    margin: '10px auto 10px auto',\n  },\n}));\n\nfunction App() {\n  const initialStateString = window.localStorage.getItem('items');\n  const initialState = initialStateString\n    ? JSON.parse(initialStateString)\n    : [];\n\n  const [state, _setState] = React.useState(initialState);\n\n  function setState(newState) {\n    if (typeof(newState) === 'function') {\n      newState = newState(state);\n    }\n    window.localStorage.setItem('items', JSON.stringify(newState));\n    _setState(newState);\n  }\n\n  function addLocation(name) {\n    const timestamp = new Date().getTime();\n    navigator.geolocation.getCurrentPosition(\n      ({ coords: location }) => setState(state => [ ...state, { timestamp, name, location } ]),\n      () => {},\n      { maximumAge: 0, enableHighAccuracy: true }\n    );\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CheckInForm addLocation={addLocation} />\n      <HistoryList history={state} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
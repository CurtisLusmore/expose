{"version":3,"sources":["CheckInForm.jsx","HistoryList.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","marginBottom","CheckInForm","addLocation","initialStateString","window","localStorage","getItem","initialState","JSON","parse","name","mode","React","useState","state","_setState","setState","newState","setItem","stringify","classes","className","onSubmit","ev","preventDefault","TextField","required","label","value","onChange","target","Button","variant","color","type","disabled","Error","dividerFullWidth","margin","spacing","CheckInEntry","timestamps","locations","ListItem","ListItemText","primary","length","latitude","longitude","href","latitude1","longitude1","latitude2","longitude2","locationLink","secondary","moment","format","timeString","HistoryList","days","history","reduce","curr","prev","tail","date","undefined","items","List","subheader","ListSubheader","component","map","Divider","Typography","display","App","timestamp","Date","getTime","navigator","geolocation","getCurrentPosition","coords","location","maximumAge","enableHighAccuracy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c63e57f.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > *': {\r\n      marginBottom: '10px',\r\n    },\r\n    '& .MuiTextField-root': {\r\n      width: '100%',\r\n    }\r\n  },\r\n}));\r\n\r\nexport default function CheckInForm({ addLocation }) {\r\n  const initialStateString = window.localStorage.getItem('form');\r\n  const initialState = initialStateString\r\n    ? JSON.parse(initialStateString)\r\n    : { name: '', mode: 'checkin' };\r\n\r\n  const [state, _setState] = React.useState(initialState);\r\n\r\n  function setState(newState) {\r\n    if (typeof(newState) === 'function') {\r\n      newState = newState(state);\r\n    }\r\n    window.localStorage.setItem('form', JSON.stringify(newState));\r\n    _setState(newState);\r\n  }\r\n\r\n  function changeName(ev) {\r\n    setState(state => ({ ...state, name: ev.target.value }));\r\n  }\r\n\r\n  function checkIn(ev) {\r\n    ev.preventDefault();\r\n    addLocation(state.name, 'checkin');\r\n    setState(state => ({ ...state, mode: 'checkout' }));\r\n    return false;\r\n  }\r\n\r\n  function checkOut(ev) {\r\n    ev.preventDefault();\r\n    addLocation(state.name, 'checkout');\r\n    setState(state => ({ ...state, name: '', mode: 'checkin' }));\r\n    return false;\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  switch (state.mode) {\r\n    case 'checkin':\r\n      return <form className={classes.root} onSubmit={checkIn}>\r\n        <TextField\r\n          required\r\n          label=\"Location Name\"\r\n          name=\"name\"\r\n          value={state.name}\r\n          onChange={changeName}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n        >\r\n          Check In\r\n        </Button>\r\n      </form>;\r\n    case 'checkout':\r\n      return <form className={classes.root} onSubmit={checkOut}>\r\n        <TextField\r\n          required\r\n          label=\"Location Name\"\r\n          name=\"name\"\r\n          value={state.name}\r\n          disabled={true}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n        >\r\n          Check Out\r\n        </Button>\r\n      </form>;\r\n    default:\r\n      throw new Error(`Unknown mode ${state.mode}`);\r\n  }\r\n};","import React from 'react';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  dividerFullWidth: {\r\n    margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n  },\r\n}));\r\n\r\n\r\n\r\nfunction CheckInEntry({ name, timestamps, locations }) {\r\n  function timeString(timestamps) {\r\n    if (timestamps.length === 1) {\r\n      return moment(timestamps[0]).format('hh:mmA');\r\n    }\r\n    else {\r\n      return moment(timestamps[0]).format('hh:mmA') + ' - ' + moment(timestamps[1]).format('hh:mmA');\r\n    }\r\n  }\r\n\r\n  function locationLink(name, locations) {\r\n    if (locations.length === 1) {\r\n      const { latitude, longitude } = locations[0];\r\n      return <a href={`https://www.google.com/maps/search/${latitude},${longitude}/@${latitude},${longitude},17z`}>{name}</a>;\r\n    }\r\n    else {\r\n      const [\r\n        { latitude: latitude1, longitude: longitude1 },\r\n        { latitude: latitude2, longitude: longitude2 }\r\n      ] = locations;\r\n      return <a href={`https://www.google.com/maps/dir///@${latitude2},${longitude2},17z/data=!3m1!4b1!4m10!4m9!1m3!2m2!1d${longitude1}!2d${latitude1}!1m3!2m2!1d${longitude2}!2d${latitude2}!3e2`}>{name}</a>;\r\n    }\r\n  }\r\n\r\n  return <ListItem key={timestamps[0]}>\r\n    <ListItemText primary={locationLink(name, locations)} secondary={timeString(timestamps)} />\r\n  </ListItem>\r\n};\r\n\r\nexport default function HistoryList({ history }) {\r\n  const days = history.reduce(([prev, ...tail], curr) => {\r\n    const date = moment(curr.timestamps[0]).format('DD/MM/YYYY');\r\n    return prev === undefined\r\n      ? [{ date, items: [curr] }]\r\n      : prev.date !== date\r\n      ? [...tail, prev, { date, items: [curr] }]\r\n      : [...tail, { date, items: [...prev.items, curr] }];\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  function CheckInDay({ date, items }) {\r\n    return <span key={`span-${date}`}>\r\n      <Divider component=\"li\" key={`divider-${date}`} />\r\n      <li key={`subhead-${date}`}>\r\n        <Typography\r\n          className={classes.dividerFullWidth}\r\n          color=\"textSecondary\"\r\n          display=\"block\"\r\n          variant=\"caption\"\r\n        >\r\n          {date}\r\n        </Typography>\r\n      </li>\r\n      {items.map(CheckInEntry)}\r\n    </span>;\r\n  };\r\n\r\n  return <List\r\n      className={classes.root}\r\n      subheader={\r\n        <ListSubheader component=\"div\">\r\n          Location History\r\n        </ListSubheader>\r\n      }\r\n    >\r\n    {days.map(CheckInDay)}\r\n  </List>;\r\n};","import React from 'react';\nimport CheckInForm from './CheckInForm';\nimport HistoryList from './HistoryList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n    margin: '10px auto 10px auto',\n  },\n}));\n\nfunction App() {\n  const initialStateString = window.localStorage.getItem('items');\n  const initialState = initialStateString\n    ? JSON.parse(initialStateString)\n    : [];\n\n  const [state, _setState] = React.useState(initialState);\n\n  function setState(newState) {\n    if (typeof(newState) === 'function') {\n      newState = newState(state);\n    }\n    window.localStorage.setItem('items', JSON.stringify(newState));\n    _setState(newState);\n  }\n\n  function addLocation(name, mode) {\n    const timestamp = new Date().getTime();\n    navigator.geolocation.getCurrentPosition(\n      ({ coords }) => {\n        const location = { latitude: coords.latitude, longitude: coords.longitude };\n        switch (mode) {\n          case 'checkin':\n            setState(state => [ { name, timestamps: [timestamp], locations: [location] }, ...state ]);\n            break;\n          case 'checkout':\n            setState(([curr, ...state]) => [ { name, timestamps: [...curr.timestamps, timestamp], locations: [...curr.locations, location] }, ...state ]);\n            break;\n        }\n      },\n      () => {},\n      { maximumAge: 0, enableHighAccuracy: true }\n    );\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CheckInForm addLocation={addLocation} />\n      <HistoryList history={state} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}